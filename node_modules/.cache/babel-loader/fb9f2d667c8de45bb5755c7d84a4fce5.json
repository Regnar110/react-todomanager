{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\desktop\\\\myReactProjects\\\\todolist\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ListInput from './ListInput';\nimport './index.css';\nimport { list } from './list.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputField: '',\n      listQueue: list\n    };\n\n    this.inputValue = event => {\n      this.setState({\n        inputField: event.target.value\n      }, () => {\n        console.log(this.state.inputField);\n      });\n    };\n\n    this.submitField = () => {\n      this.setState({\n        listQueue: list.push(this.state.inputField)\n      }, // zmiana stanu listQueue na to co zostało wprowadzone w inputField - setState to funkcja asynchroniczna\n      () => {\n        console.log(list);\n      }); // funkcja pokazująca  AKTUALNY STAN OBIEKTU listQueue i tablicy w nim zawartej - inaczej się nie da bo setState jest asynchroniczny.\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListInput, {\n      submit: this.submitField,\n      input: this.inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mateusz/desktop/myReactProjects/todolist/src/App.js"],"names":["React","Component","ListInput","list","App","state","inputField","listQueue","inputValue","event","setState","target","value","console","log","submitField","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,WAAnB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAEJ;AAFL,KADgB;;AAAA,SAM1BK,UAN0B,GAMZC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAd,EACA,MAAK;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,UAAvB;AAAmC,OADzC;AAED,KATyB;;AAAA,SAW1BS,WAX0B,GAWZ,MAAM;AAClB,WAAKL,QAAL,CAAc;AAACH,QAAAA,SAAS,EAACJ,IAAI,CAACa,IAAL,CAAU,KAAKX,KAAL,CAAWC,UAArB;AAAX,OAAd,EAA4D;AAC5D,YAAM;AAACO,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAAkB,OADzB,EADkB,CAES;AAC1B,KAduB;AAAA;;AAgB1Bc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKF,WAAxB;AAAqC,MAAA,KAAK,EAAE,KAAKP,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtByB;;AAyB5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport ListInput from './ListInput';\nimport './index.css';\nimport {list} from './list.js'\n\nclass App extends Component { // jest to nowy syntax - nie trzeba tworzyć już konstruktora i używać super do dziedziczenia po obiekcie nadrzędnym. Wystarczy tak jak jest tutaj\n    state = {\n      inputField: '',\n      listQueue: list\n    }\n  \n  inputValue = (event) => {\n    this.setState({inputField: event.target.value},\n    () =>{console.log(this.state.inputField)});\n  }\n\n  submitField = () => {\n    this.setState({listQueue:list.push(this.state.inputField)}, // zmiana stanu listQueue na to co zostało wprowadzone w inputField - setState to funkcja asynchroniczna\n    () => {console.log(list)}) // funkcja pokazująca  AKTUALNY STAN OBIEKTU listQueue i tablicy w nim zawartej - inaczej się nie da bo setState jest asynchroniczny.\n    }\n\n  render() {\n    return(\n      <div>\n        <ListInput submit={this.submitField} input={this.inputValue}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}