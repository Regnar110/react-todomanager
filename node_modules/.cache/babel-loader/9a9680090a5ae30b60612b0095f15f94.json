{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\desktop\\\\myReactProjects\\\\todolist\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ListInput from './ListInput';\nimport './index.css';\nimport { list } from './list.js';\nimport ListItems from './ListItems';\n\nclass App extends Component {\n  // Można pisać bez konstruktora i super() jest to nowy syntax - nie trzeba tworzyć już konstruktora i używać super do dziedziczenia po obiekcie nadrzędnym. Wystarczy tak jak jest tutaj\n  constructor() {\n    super();\n\n    this.inputValue = event => {\n      this.setState({\n        inputField: event.target.value\n      });\n    };\n\n    this.submitField = () => {\n      this.setState({\n        listQueue: list.push(this.state.inputField)\n      }); // zmiana stanu listQueue na to co zostało wprowadzone w inputField - setState to funkcja asynchroniczna\n\n      console.log(this.state.listQueue);\n    };\n\n    this.state = {\n      inputField: '',\n      listQueue: list\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListInput, {\n      submit: this.submitField,\n      input: this.inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItems, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mateusz/desktop/myReactProjects/todolist/src/App.js"],"names":["React","Component","ListInput","list","ListItems","App","constructor","inputValue","event","setState","inputField","target","value","submitField","listQueue","push","state","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAE;AAC5BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,UARc,GAQAC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA1B,OAAd;AACD,KAVa;;AAAA,SAYdC,WAZc,GAYA,MAAM;AAClB,WAAKJ,QAAL,CAAc;AAACK,QAAAA,SAAS,EAACX,IAAI,CAACY,IAAL,CAAU,KAAKC,KAAL,CAAWN,UAArB;AAAX,OAAd,EADkB,CAC0C;;AAC5DO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWF,SAAvB;AACD,KAfa;;AAEZ,SAAKE,KAAL,GAAa;AACXN,MAAAA,UAAU,EAAE,EADD;AAEXI,MAAAA,SAAS,EAAEX;AAFA,KAAb;AAID;;AAWDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKN,WAAxB;AAAqC,MAAA,KAAK,EAAE,KAAKN,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzByB;;AA4B5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport ListInput from './ListInput';\nimport './index.css';\nimport {list} from './list.js'\nimport ListItems from './ListItems';\n\nclass App extends Component { // Można pisać bez konstruktora i super() jest to nowy syntax - nie trzeba tworzyć już konstruktora i używać super do dziedziczenia po obiekcie nadrzędnym. Wystarczy tak jak jest tutaj\n  constructor() {  \n    super();\n    this.state = {\n      inputField: '',\n      listQueue: list\n    }\n  }\n  \n  inputValue = (event) => {\n    this.setState({inputField: event.target.value})\n  }\n\n  submitField = () => {\n    this.setState({listQueue:list.push(this.state.inputField)}) // zmiana stanu listQueue na to co zostało wprowadzone w inputField - setState to funkcja asynchroniczna\n    console.log(this.state.listQueue)\n  }\n\n  render() {\n    return(\n      <div>\n        <ListInput submit={this.submitField} input={this.inputValue}/>\n        <ListItems/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}